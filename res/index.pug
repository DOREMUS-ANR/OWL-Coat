doctype html
html(lang="en")
  head
    title DOREMUS Ontology
    link(rel='stylesheet', href='styles.css')
    meta(charset='UTF-8')
    meta(name="viewport", content="width=device-width, initial-scale=1.0")


  body

    section.cover
      .inside
        .description
          h1 DOREMUS Ontology
          p The DOREMUS Ontology is an extension the FRBRoo model for describing music catalogs.
          p This ontology defines #{classes.length} classes and #{properties.length} properties.
          a.btn(href="https://github.com/DOREMUS-ANR/doremus-ontology")
            span See it on GitHub

        .logo
          img(src='http://www.doremus.org/wp-content/uploads/2015/06/Logotype-Doremus-VA-Couleurs.png')

    section.model-pics
      img(src='./img/model.composition.png')
      img(src='./img/model.concert.png')
      img(src='./img/model.score.png')

    h1 Summary
    section.summary
      h2 Classes
      ul
        each c in classes
          li
            a(href='#'+utils.getHash(c))
              if c['rdfs:label'] == null
                span= c['@id']
              else
                span= utils.print(c['rdfs:label'], true)

      h2 Properties
      ul
        each p in properties
          li
            a(href='#'+utils.getHash(p))
              if p['rdfs:label'] == null
                span= p['@id']
              else
                span= utils.print(p['rdfs:label'], true)

    h1 Classes
    section.classes.card
      ul.list
        each c in classes
          li
            h2(id=utils.getHash(c))
              a(href='#'+utils.getHash(c))
                if c['rdfs:label'] == null
                  span= c['@id']
                else
                  span= utils.print(c['rdfs:label'], true)
                small= ontology.namespace + utils.getHash(c)
            ul.features
              each obj, prop in c
                if utils.isSignificative(prop)
                  li
                    div.prop
                      small= prop
                    div.obj
                      span!= utils.print(obj).replace(/\n/g, '<br/>')

    h1 Properties
    section.properties.card
      ul.list
        each p in properties
          li
            h2(id=utils.getHash(p))
              a(href='#'+utils.getHash(p))
                if p['rdfs:label'] == null
                  span= p['@id']
                else
                  span= utils.print(p['rdfs:label'], true)
                small= ontology.namespace + utils.getHash(p)
            ul.features
              each obj, prop in p
                if utils.isSignificative(prop)
                  li
                    div.prop
                      small= prop
                    div.obj
                      span!= utils.print(obj).replace(/\n/g, '<br/>')

    footer#appFooter
      .footerCont
        div
          p.descr
            | The
            strong DOREMUS Ontology
            | lives inside the
            a(href='http://www.doremus.org', rel='external', target='_blank') DOREMUS project
            | , for describing, publishing, connecting and contextualizing music catalogues on the web of data.
            br
            br
            a.licenseBadge(rel="license", href="http://creativecommons.org/licenses/by/4.0/")
              img(alt="Licenza Creative Commons", style="border-width:0", src="https://i.creativecommons.org/l/by/4.0/88x31.png")
            | This work is licensed under
            a(rel="license", href="http://creativecommons.org/licenses/by/4.0/") Creative Commons Attribution 4.0 International License
            | .
            br
            br
            | Photo credit:
            a(href='https://flic.kr/p/njM9TN') Howard Ignatius
        .projLogoCont
          a(href='http://www.doremus.org', rel='external', target='_blank')
            img(src='http://www.doremus.org/wp-content/uploads/2015/06/Logotype-Doremus-VA-Couleurs.png')
